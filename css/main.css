/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0;
}

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block;
}

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px;
}

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
     * Add the correct display in IE.
     */
main {
  display: block;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit;
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic;
}

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000;
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block;
}

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none;
}

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
       ========================================================================== */
/**
     * Show the overflow in IE.
     */
button {
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible;
}

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto;
}

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block;
}

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item;
}

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block;
}

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block;
}

/**
     * Add the correct display in IE.
     */
template {
  display: none;
}

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'FuturaT';
  src: url("../fonts/FuturaNo2DOT-DemBol.ttf");
}

.logo-text {
  width: 10em;
}

.logo-header {
  width: 95px;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-size: 18px;
  font-family: "FuturaT", Helvetica, Arial, sans-serif;
  font-weight: bold;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
}

.border {
  margin: 0 auto;
  width: 950px;
  height: 40px;
  background: url(../images/border.svg);
}

header {
  width: 100%;
  height: 10em;
  overflow: hidden;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  background-color: transparent;
  transition: all 0.3s;
  padding: 1em 6em;
}

header .logo-header {
  transition: all 0.3s;
}

header nav a {
  line-height: 150px;
  margin-left: 2em;
  color: #000;
  font-size: 1em;
  text-decoration: none;
  transition: all 0.3s;
}

header nav a:hover {
  color: #f2224a;
}

header nav a .selected {
  color: #f2224a;
}

header.smaller {
  height: 6.5em;
  border-bottom: solid 1px #000;
  background-color: #fff;
}

header.smaller .logo header {
  width: 60px;
}

header.smaller nav a {
  line-height: 75px;
}

.header-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@media (max-width: 768px) {
  .header-container {
    flex-flow: column wrap;
  }
  header {
    padding: 1em;
  }
  header nav a {
    line-height: 50px;
    margin: 0 5px;
  }
  header.smaller {
    height: 75px;
  }
  header.smaller nav a {
    line-height: 35px;
  }
  header.smaller .logo-header {
    display: none;
  }
}

.footer {
  margin-top: 3em;
  text-align: center;
}

.footer__logo {
  padding-bottom: 2.5em;
}

.footer__logo a {
  cursor: pointer;
}

.footer__copyright {
  width: 100%;
  padding: 0.7em;
  font-size: 1.5em;
  color: #fff;
  background-color: #000;
  text-align: center;
}

.section {
  margin: 3em 0;
}

@media (min-width: 768px) {
  .section {
    margin-bottom: 5em;
  }
}

.section__title {
  font-size: 2em;
  letter-spacing: 0.15em;
  text-align: center;
}

@media (min-width: 768px) {
  .section__title {
    font-size: 3em;
  }
}

.section__title::before {
  display: none;
}

@media (min-width: 768px) {
  .section__title::before {
    content: '';
    display: block;
    position: relative;
    background-image: url(../images/coordinate_left.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 25px;
    width: 50px;
    height: 45px;
    top: 57px;
    left: -14px;
  }
}

.section__title::after {
  display: none;
}

@media (min-width: 768px) {
  .section__title::after {
    content: '';
    display: block;
    position: relative;
    background-image: url(../images/coordinate_right.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 25px;
    width: 50px;
    height: 40px;
    bottom: 57px;
    right: -1162px;
  }
}

.shapes-section {
  padding: 10em 0 3em 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

@media (min-width: 768px) {
  .shapes-section {
    padding: 10em 0 7em 0;
  }
}

.section-shapes__text {
  font-size: 2.5em;
  letter-spacing: 0.15em;
  text-align: center;
  margin: 0 2em;
}

@media (min-width: 768px) {
  .section-shapes__text {
    font-size: 5em;
  }
}

#video-background {
  position: absolute;
  right: 50;
  bottom: 100;
  width: auto;
  height: auto;
  z-index: -100;
  max-width: 100%;
  max-height: 100%;
}

@media (min-width: 768px) {
  #video-background {
    min-width: 100%;
    min-height: 100%;
  }
}

.about-section__container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

@media (min-width: 768px) {
  .about-section__container {
    flex-direction: row;
  }
}

.about-section__infobox {
  text-align: center;
  padding: 0.5em 2em;
  width: 25em;
}

@media (min-width: 768px) {
  .about-section__infobox {
    flex: 1;
  }
}

.about-section__infobox h2 {
  color: #f2224a;
  font-size: 3em;
}

@media (min-width: 768px) {
  .about-section__infobox h2 {
    font-size: 4em;
  }
}

.concept-section__background {
  background-color: #f2224a;
  background-image: -webkit-linear-gradient(-30deg, #000 50%, #f2224a 50%);
  min-height: 500px;
}

.concept-section__concepts {
  color: white;
  margin-top: 0.5em;
  font-size: 1.2em;
  padding: 2em 3em;
}

@media (min-width: 768px) {
  .concept-section__concepts {
    padding: 4em 5em;
  }
}

.concept-section__concepts-title {
  color: aqua;
  padding: 1em 0 0.5em 0;
  font-size: 2em;
  text-align: center;
}

@media (min-width: 768px) {
  .concept-section__concepts-title {
    font-size: 2.5em;
  }
}

.concept-section__concepts-title:first-of-type {
  padding-top: 0px;
}

.concept-section__description span {
  color: aqua;
}

.chronology-section__timeline ul {
  padding: 50px 0;
}

.chronology-section__timeline ul li {
  list-style-type: none;
  position: relative;
  width: 2px;
  margin: 0 auto;
  padding-top: 50px;
  background: #000;
}

.chronology-section__timeline ul li::after {
  content: '';
  position: absolute;
  left: 50%;
  bottom: 0;
  transform: translateX(-50%);
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: inherit;
}

.chronology-section__timeline ul li div {
  color: #fff;
  position: relative;
  bottom: 0;
  width: 400px;
  padding: 15px;
}

.chronology-section__timeline ul li div time {
  display: block;
  font-size: 2em;
  text-align: center;
  font-weight: bold;
  margin-bottom: 8px;
}

.chronology-section__timeline ul li div p {
  margin-top: 1em;
}

.chronology-section__timeline ul li div p:first-of-type {
  margin-top: 0px;
}

#y1870 {
  background: #0599fa;
}

#y1913 {
  background: #6475fc;
}

#y1915 {
  background: #8b67fd;
}

#y1917 {
  background: #b556fe;
}

#y1919 {
  background: #c252fe;
}

#y1920 {
  background: #ca4ffe;
}

#y1921 {
  background: #de47ff;
}

#y1934 {
  background: #eb42ff;
}

.chronology-section__timeline ul li div::before {
  content: '';
  position: absolute;
  bottom: 7px;
  width: 0;
  height: 0;
  border-style: solid;
}

.chronology-section__timeline ul li:nth-child(odd) div {
  left: 45px;
}

.chronology-section__timeline ul li:nth-child(odd) div::before {
  left: -15px;
  border-width: 8px 16px 8px 0;
}

.chronology-section__timeline ul li:nth-child(even) div {
  left: -439px;
}

.chronology-section__timeline ul li:nth-child(even) div::before {
  right: -15px;
  border-width: 8px 0 8px 16px;
}

.chronology-section__timeline ul li:nth-child(1) div::before {
  border-color: transparent #0599fa transparent transparent;
}

.chronology-section__timeline ul li:nth-child(2) div::before {
  border-color: transparent transparent transparent #6475fc;
}

.chronology-section__timeline ul li:nth-child(3) div::before {
  border-color: transparent #8b67fd transparent transparent;
}

.chronology-section__timeline ul li:nth-child(4) div::before {
  border-color: transparent transparent transparent #b556fe;
}

.chronology-section__timeline ul li:nth-child(5) div::before {
  border-color: transparent #c252fe transparent transparent;
}

.chronology-section__timeline ul li:nth-child(6) div::before {
  border-color: transparent transparent transparent #ca4ffe;
}

.chronology-section__timeline ul li:nth-child(7) div::before {
  border-color: transparent #de47ff transparent transparent;
}

.chronology-section__timeline ul li:nth-child(8) div::before {
  border-color: transparent transparent transparent #eb42ff;
}

.chronology-section__timeline ul li::after {
  transition: background .5s ease-in-out;
}

.chronology-section__timeline ul li.visible:nth-child(1)::after {
  background: #0599fa;
}

.chronology-section__timeline ul li.visible:nth-child(2)::after {
  background: #6475fc;
}

.chronology-section__timeline ul li.visible:nth-child(3)::after {
  background: #8b67fd;
}

.chronology-section__timeline ul li.visible:nth-child(4)::after {
  background: #b556fe;
}

.chronology-section__timeline ul li.visible:nth-child(5)::after {
  background: #c252fe;
}

.chronology-section__timeline ul li.visible:nth-child(6)::after {
  background: #ca4ffe;
}

.chronology-section__timeline ul li.visible:nth-child(7)::after {
  background: #de47ff;
}

.chronology-section__timeline ul li.visible:nth-child(8)::after {
  background: #eb42ff;
}

.chronology-section__timeline ul li div {
  visibility: hidden;
  opacity: 0;
  transition: all .5s ease-in-out;
}

.chronology-section__timeline ul li:nth-child(odd) div {
  transform: translate3d(200px, 0, 0);
}

.chronology-section__timeline ul li:nth-child(even) div {
  transform: translate3d(-200px, 0, 0);
}

.chronology-section__timeline ul li.visible div {
  transform: none;
  visibility: visible;
  opacity: 1;
}

@media (max-width: 900px) {
  .chronology-section__timeline ul li div {
    width: 250px;
  }
  .chronology-section__timeline ul li:nth-child(even) div {
    left: -289px;
  }
}

@media (max-width: 900px) {
  .chronology-section__timeline ul li {
    margin-left: 20px;
  }
  .chronology-section__timeline ul li div {
    width: calc(100vw - 91px);
  }
  .chronology-section__timeline ul li:nth-child(even) div {
    left: 45px;
  }
  .chronology-section__timeline ul li:nth-child(even) div::before {
    left: -15px;
    border-width: 8px 16px 8px 0;
  }
  .chronology-section__timeline ul li:nth-child(2) div::before {
    border-color: transparent #6475fc transparent transparent;
  }
  .chronology-section__timeline ul li:nth-child(4) div::before {
    border-color: transparent #b556fe transparent transparent;
  }
  .chronology-section__timeline ul li:nth-child(6) div::before {
    border-color: transparent #ca4ffe transparent transparent;
  }
  .chronology-section__timeline ul li.in-view:nth-child(8)::after {
    border-color: transparent #eb42ff transparent transparent;
  }
}

.artists-section__container {
  display: flex;
  flex-direction: column;
  margin: 0 2em;
  margin-top: 0.5em;
}

.artists-section__row {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: baseline;
}

@media (min-width: 768px) {
  .artists-section__row {
    display: flex;
    justify-content: flex-start;
  }
}

.artist-section__artist {
  color: #ffc83e;
  text-decoration: none;
  padding: 0 5px;
  transition: color 0.3s ease-in-out;
}

@media (min-width: 768px) {
  .artist-section__artist {
    flex-basis: 31%;
  }
}

.artist-section__artist:hover {
  color: #f2224a;
}

@media (min-width: 768px) {
  .artists-section__row:nth-child(2n) {
    display: flex;
    justify-content: flex-end;
    text-align: right;
  }
}

.Popova {
  font-size: 2.5em;
}

.Tatlin {
  font-size: 4em;
}

.Malewicz {
  font-size: 4.5em;
}

.Lissitzky {
  font-size: 4em;
}

.Rodczenko {
  font-size: 3.5em;
}

.Larionow {
  font-size: 3em;
}

.works {
  font-size: 2em;
  color: #f2224a;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
